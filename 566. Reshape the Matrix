# Time Complexity : O(r*c)
# Space Complexity : O(r*c)
class Solution(object):
    def matrixReshape(self, mat, r, c):
        # Base case...
        if not mat: return mat
        # If transformation doesn't occur, return mat...
        if len(mat) * len(mat[0]) != r * c:
            return mat
        # Otherwise create a output matrix and fill the cells...
        output = [[0 for i in range(c)] for i in range(r)]
        idx = 0
        # Traverse the matrix through the loop... 
        while idx < r * c:
            # idx % c will give us the current column number...
            # idx / c will give us how many rows we have completely filled...
            output[idx // c][ idx % c] =  mat[idx // len(mat[0])][idx % len(mat[0])]
            idx += 1
        return output       # Return the output matrix...
